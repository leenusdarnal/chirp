import { type NextPage } from "next"
import Head from "next/head"
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs"

import { type RouterOutputs, api } from "~/utils/api"

import dayjs from "dayjs"
import relativeTIme from "dayjs/plugin/relativeTime"
import Image from "next/image"
import { Loading } from "../components/Loading"
import { retryDelay } from "@trpc/client/dist/internals/retryDelay"

dayjs.extend(relativeTIme)

const CreatePostWizard = () => {
  const { user } = useUser()
  if (!user) return null
  console.log(user)
  return (
    <div className="flex w-full gap-3">
      <Image
        src={user.profileImageUrl}
        alt="Profile Image"
        className="h-14 w-14 rounded-full"
        width="56"
        height="56"
      />
      <input
        placeholder="Type some emoji"
        className="grow bg-transparent outline-none"
      />
    </div>
  )
}
type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  const { post, author } = props
  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <Image
        src={author.profilePictureUrl}
        alt={`@${author.username} profile picture`}
        className="h-14 w-14 rounded-full"
        width="56"
        height="56"
      />
      <div className="flex flex-col">
        <div className="flex gap-1  text-slate-300">
          <span>{`@${author.username} `}</span>{" "}
          <span className="font-thin">{`Â· ${dayjs(
            post.createdAt
          ).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  )
}

const Feed = () => {
  const { data, isLoading: postLoading } = api.posts.getAll.useQuery()

  if (postLoading) return <Loading size={60} />

  if (!data) return <div>Something went wrong</div>

  return (
    <div className="flex flex-col">
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  )
}

const Home: NextPage = () => {
  const { isLoaded: userLoaded, isSignedIn } = useUser()

  // start fetching ASAP
  api.posts.getAll.useQuery()

  // return empty div if both are not loaded since user tends to load faster
  if (!userLoaded) return <div></div>

  return (
    <>
      <Head>
        <title>Chirp</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen justify-center">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex border-b border-slate-400 p-4">
            {!isSignedIn && (
              <div className="flex w-full justify-center">
                <SignInButton />
              </div>
            )}
            {!!isSignedIn && (
              <div className="flex w-full justify-center">
                <CreatePostWizard />
                <SignOutButton />
              </div>
            )}
          </div>
          <Feed />
        </div>
      </main>
    </>
  )
}

export default Home
